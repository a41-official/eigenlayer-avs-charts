commonLabels:
  a41.io/project: avs
  a41.io/network: mainnet
  a41.io/chain: eigenlayer
  a41.io/avs: arpa
  a41.io/delegator: a41

annotations: {}

replicas: 1

network: ""

nodeSelector:
  a41.io/project: ""

image:
  repository: ghcr.io/arpa-network/node-client
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []

nameOverride: ""

fullnameOverride: ""

serviceMonitor:
  enabled: true
  scrapeTimeout: 10s
  interval: 30s
  path: /health
  port: statistics-http
  tlsConfig: {}

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}

podLabels: {}

podSecurityContext: {}

podServiceAccountAutomount: false

securityContext: {}

externalService:
  type: LoadBalancer
  ports:
    - name: cmtr-ex-rpc
      port: 50061
      targetPort: 50061
      protocol: TCP
  loadBalancerIP: ""

internalService:
  ports:
    - name: cmtr-rpc
      port: 50061
      targetPort: 50061
      protocol: TCP
    - name: management-rpc
      port: 50091
      targetPort: 50091
      protocol: TCP
    - name: statistics-http
      port: 50081
      targetPort: 50081
      protocol: TCP

readinessProbe:
  httpGet:
    path: /health
    port: 50081
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

livenessProbe:
  httpGet:
    path: /health
    port: 50081
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 3
  failureThreshold: 2
  successThreshold: 1

resources: 
  limits:
    cpu: 1000m
    memory: 2048Mi
  requests:
    cpu: 1000m
    memory: 2048Mi

secretNames:
  arpaNodeKey: "arpa-node-ecdsa-keystore"
  arpaNodeKeyPassword: "arpa-node-ecdsa-password"
  arpaAwsSecret: "arpa-node-aws-secret"

sealedSecrets:
  enabled: true
  arpaNodeKey:
    encryptedData:
      keystore: ""
  arpaNodeKeyPassword:
    encryptedData:
      password: ""
  arpaAwsSecret:
    encryptedData:
      awsAccessKeyId: ""
      awsSecretAccessKey: ""

configs:
  config.yml: {}

tolerations: []

affinity: {}

cronjob:
  schedule: "0 0 * * *"
  s3:
    bucketName: ""
  container:
    mountPath: /app/db

exporter:
  enabled: true
  image:
    repository: ghcr.io/arpa-network/custom-exporter
    pullPolicy: Always
    tag: "latest"
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
      ephemeral-storage: "2Gi"
    requests:
      cpu: 100m
      memory: 128Mi
  service: 
    type: ClusterIP
    port: 8000
  config:
    node_address: ""
    l1_chain_id: "1"
    provider_endpoint: ""
    interval: 30
    exporter_port: 8000