apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "arpa.fullname" . }}-db-backup-cronjob
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: arpa-db-backup
              image: alpine
              command: ["/bin/sh", "-c"]
              args:
                - >
                  apk add --no-cache aws-cli tar &&
                  tar -czf /tmp/{{ .Release.Namespace }}-db-backup.tar.gz -C {{ .Values.cronjob.container.mountPath }} . &&
                  aws s3 cp /tmp/{{ .Release.Namespace }}-db-backup.tar.gz s3://{{ .Values.cronjob.s3.bucketName }}/db/{{ .Release.Namespace }}-db-backup-$(date +\%F).tar.gz &&
                  rm /tmp/{{ .Release.Namespace }}-db-backup.tar.gz;
              volumeMounts:
                - name: arpa-pvc
                  mountPath: {{ .Values.cronjob.container.mountPath }}
              env:
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: aws-secret
                      key: awsAccessKeyId
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: aws-secret
                      key: awsSecretAccessKey
          restartPolicy: OnFailure
          volumes:
            - name: arpa-pvc
              persistentVolumeClaim:
                claimName: arpa-pvc-{{ include "arpa.fullname" . }}-0