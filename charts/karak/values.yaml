# Default values for karak.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: a41ventures/karak
  pullPolicy: IfNotPresent 
  tag: "latest"

## Common labels
##
commonLabels: {}

## Network to which the client is connected
network: testnet

env:
  AGGREGATOR_URL: https://aggregator-example.dss.karak.network
  HOST: 0.0.0.0 # must be overrided
  PORT: 0000 # must be override
  RPC_URL: https://rpc.ankr.com/eth_sepolia/784ac3fdefe6a9e0a7f235a2e4f30014f066d17fba1802620792a0a11727e173
  DSS_CONTRACT_ADDRESS: 0x9bE435eD8E39a96EF4901cFfFbA4e0ff4321e710

secrets:
  blsSecretKey: ""
  validatorPrivateKey: ""



imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

## Service monitor to use
##
serviceMonitor:
  # If true, create a serviceMonitor
  enabled: false
  # Annotations
  annotations: {}
  # Path to scrape
  path: /metrics
  # Scrape interval
  interval: 1m
  # Scrape timeout
  scrapeTimeout: 30s

podAnnotations: {}
podLabels: {}
podSecurityContext: {}
# securityContext:
#   runAsUser: 65534
#   runAsGroup: 65534


service:
  type: LoadBalancer
  loadBalancerIP: ""
  annotations:
    metallb.universe.tf/allow-shared-ip: "key-to-share-121.138.74.22"
  ports: #외부 노출할 포트 (internal cluster)
    - name: http-port
      port: 8080
      protocol: TCP
      targetPort: 8080


resources: {}

livenessProbe:
  httpGet:
    path: /metrics
    port: metrics
readinessProbe:
  httpGet:
    path: /metrics
    port: metrics

volumes: []

volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
