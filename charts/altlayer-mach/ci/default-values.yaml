# Leave empty so that CT tests with default values

# Github Action Runner resource limits: https://docs.github.com/ko/actions/writing-workflows/choosing-where-your-workflow-runs/choosing-the-runner-for-a-job#standard-github-hosted-runners-for--private-repositories
# CPU: 2-core, Memory: 7 GB, Disk: 14 GB
# Kube System Uses: 950m CPU, 290Mi Memory
# Available for Helm Test: 1050m CPU, 6.71Gi Memory
node:
  resources:
    limits:
      cpu: 500m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 2Gi
verifier:
  resources:
    limits:
      cpu: 500m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 2Gi

serviceMonitor:
  enabled: false

# CONFIGS
configs:
  genesis.json: |
    {
      "config": {
        "chainId": 7560,
        "homesteadBlock": 0,
        "eip150Block": 0,
        "eip155Block": 0,
        "eip158Block": 0,
        "byzantiumBlock": 0,
        "constantinopleBlock": 0,
        "petersburgBlock": 0,
        "istanbulBlock": 0,
        "muirGlacierBlock": 0,
        "berlinBlock": 0,
        "londonBlock": 0,
        "arrowGlacierBlock": 0,
        "grayGlacierBlock": 0,
        "mergeNetsplitBlock": 0,
        "shanghaiTime": 0,
        "cancunTime": 0,
        "bedrockBlock": 0,
        "regolithTime": 0,
        "canyonTime": 0,
        "ecotoneTime": 0,
        "terminalTotalDifficulty": 0,
        "terminalTotalDifficultyPassed": true,
        "optimism": {
          "eip1559Elasticity": 6,
          "eip1559Denominator": 50,
          "eip1559DenominatorCanyon": 250
        }
      },
      "nonce": "0x0",
      "timestamp": "0x6620d857",
      "extraData": "0x424544524f434b",
      "gasLimit": "0x1c9c380",
      "difficulty": "0x0",
      "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "coinbase": "0x4200000000000000000000000000000000000011",
      "alloc": {},
      "number": "0x0",
      "gasUsed": "0x0",
      "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
      "baseFeePerGas": "0x3b9aca00",
      "excessBlobGas": "0x0",
      "blobGasUsed": "0x0"
    }

  mach-config.toml: |
    ##############################################
    # Mach operator configuration                #
    ##############################################
    [operator]
    # Enabling the operator is a prerequisite for health check and alert messages to be sent to the Mach AVS operator,
    # Otherwise, only the warning logs will be printed.
    # Optional, default value: false
    enable = true
    # The JSONRPC endpoint of Mach AVS Operator
    # Optional, default value: "http://127.0.0.1:8901"
    url = "http://127.0.0.1:8093"
    # The alerts will be sent to the Mach AVS Operator only when both operator and alert are enabled,
    # Otherwise, only the warning log will be printed.
    # Optional, default value: false
    alert = true
    
    ##############################################
    # Mach validator configuration               #
    ##############################################
    [validator]
    # Validate mode: "unsafe", "safe", "strict"
    #
    # "unsafe": Don't validate block, return ok directly.
    # "safe": Validate block, return ok regardless of whether it's right or wrong.
    # "strict": Validate block, return the validation result.
    #
    # Optional, default value: "unsafe"
    mode = "unsafe"
    # The rate limit of rpc request
    # Optional, default value: 100ms
    rpc_rate_ms = 100
    
    ##############################################
    # Mach collector configuration               #
    ##############################################
    [collector]
    # The JSONRPC endpoint of Optimism node
    #
    # NOTE:
    # The chain ID of endpoint must be the same as the chain ID specified in the genesis (json) file.
    # If you have run the rollup fullnode by yourself, we highly recommend you to let the `op-mach` run in the LAN with the fullnode,
    # to reduce network latency between fullnode and `op-mach`.
    # Optional, default value: "http://127.0.0.1:8094"
    url = "https://cyber.alt.technology/"
    # The interval (milliseconds) for fetching finalized/latest block of Optimism node
    # Optional, default value: 4000ms
    interval_ms = 4000
    # The maximum number of blocks that can be fetched at one time
    # Optional, default value: 1
    max_fetcher = 1
    
    ##############################################
    # Mach scheduler configuration               #
    ##############################################
    [scheduler]
    # The interval between verified blocks
    # Optional, default value: 1
    verify_block_interval = 1
    # The timeout waiting for verify result.
    # If it times out, the verify result will be checked again in the next tick.
    # Optional, default value: 10ms
    verify_timeout_ms = 10
    # The timeout waiting for retry to validate.
    # If it times out, the validation will be executed again in the next tick.
    # Optional, default value: 10000ms
    retry_wait_timout_ms = 10000
    
    ##############################################
    # Mach prometheus configuration              #
    ##############################################
    [prometheus]
    # The TCP port of Prometheus exporter
    # Optional, default value: 9094
    port = 9094
    # The HTTP URI path for fetching Prometheus metrics
    # Optional, default value: "/metrics"
    metrics_path = "/metrics"
    # The indication if expose Prometheus exporter on all interfaces
    # true: listen address = "0.0.0.0:port"
    # false: listen address = "127.0.0.1:port"
    # Optional, default value: false
    external = true

  operator.yaml: |
    # this sets the logger level (true = info, false = debug)
    production: true

    # ETH RPC URL
    eth_rpc_url: https://ethereum-rpc.publicnode.com
    eth_ws_url: wss://ethereum-rpc.publicnode.com

    # If you running this using eigenlayer CLI and the provided AVS packaging structure,
    # this should be /operator_keys/bls_key.json as the host path will be asked while running
    #
    # We are using bn254 curve for bls keys
    #
    # If you are running locally using go run main.go, this should be full path to your local bls key file
    bls_private_key_store_path: /app/operator_keys/bls_key.json
    # ecdsa_private_key_store_path: /app/operator_keys/ecdsa_key.json

    operator_ecdsa_address: 0xfc31079f7e5b85e1bac742f9c946ccb2c14b01f8

    # aggregator_server_ip_port_address: https://optimism-aggregator.alt.technology
    aggregator_jsonrpc_server_ip_port_address: https://cyber-aggregator.alt.technology

    # avs node spec compliance https://eigen.nethermind.io/docs/spec/intro
    eigen_metrics_ip_port_address: 0.0.0.0:9092
    enable_metrics: true
    node_api_ip_port_address: 0.0.0.0:9091
    enable_node_api: true

    # EigenLayer Slasher contract address

    # This is the address of the slasher which is deployed in the anvil saved state
    avs_registry_coordinator_address: 0x118610D207A32f10F4f7C3a1FEFac5b3327c2bad
    operator_state_retriever_address: 0xD74D895d3fcC7cDb0E48D3bD0eFF613D1f513d82

    operator_server_ip_port_addr: 0.0.0.0:8093

    # the layer1 chain id the avs contracts in
    layer1_chain_id: 1

    # the layer2 chain id
    layer2_chain_id: 7560

secrets:
  blsKey: "dummy-bls-keystore"
  blsKeyPassword: "dummy-bls-password"