name: Lint and Test Charts (main)

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  helm-test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Setup
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.0

      # List changed charts
      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      # Lint Charts
      # - name: Run chart-testing (lint)
      #   if: steps.list-changed.outputs.changed == 'true'
      #   run: ct lint --target-branch ${{ github.event.repository.default_branch }}

      # Create Cluster
      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.10.0

      # Describe Nodes
      - name: Describe Nodes
        run: kubectl describe nodes

      # Install Prometheus
      - name: Install Prometheus Stack
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm install prometheus prometheus-community/kube-prometheus-stack

      # Inject Secrets
      - name: Inject dummy keystores as secret
        run: |
          echo -n '${{ secrets.DUMMY_ECDSA_KEYSTORE }}' > keystore.json
          kubectl create secret generic dummy-ecdsa-keystore --from-file=keystore.json
          echo -n '${{ secrets.DUMMY_ECDSA_PASSWORD }}' > password
          kubectl create secret generic dummy-ecdsa-password --from-file=password
          echo -n '${{ secrets.DUMMY_BLS_KEYSTORE }}' > keystore.json
          kubectl create secret generic dummy-bls-keystore --from-file=keystore.json
          echo -n '${{ secrets.DUMMY_BLS_PASSWORD }}' > password
          kubectl create secret generic dummy-bls-password --from-file=password

      # Install Charts
      - name: Run chart-testing (install)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct install --target-branch ${{ github.event.repository.default_branch }}